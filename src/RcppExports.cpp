// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rebuildTreeRecurse_cpp
arma::mat rebuildTreeRecurse_cpp(arma::mat tree_mat1, double lower1, double upper1, int rowind, arma::mat tree_mat);
RcppExport SEXP _ROBART2_rebuildTreeRecurse_cpp(SEXP tree_mat1SEXP, SEXP lower1SEXP, SEXP upper1SEXP, SEXP rowindSEXP, SEXP tree_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tree_mat1(tree_mat1SEXP);
    Rcpp::traits::input_parameter< double >::type lower1(lower1SEXP);
    Rcpp::traits::input_parameter< double >::type upper1(upper1SEXP);
    Rcpp::traits::input_parameter< int >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tree_mat(tree_matSEXP);
    rcpp_result_gen = Rcpp::wrap(rebuildTreeRecurse_cpp(tree_mat1, lower1, upper1, rowind, tree_mat));
    return rcpp_result_gen;
END_RCPP
}
// rebuildTree2_cpp
arma::mat rebuildTree2_cpp(arma::mat tree_mat);
RcppExport SEXP _ROBART2_rebuildTree2_cpp(SEXP tree_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tree_mat(tree_matSEXP);
    rcpp_result_gen = Rcpp::wrap(rebuildTree2_cpp(tree_mat));
    return rcpp_result_gen;
END_RCPP
}
// getPredictionsForTreeRecursive_cpp
arma::field<arma::mat> getPredictionsForTreeRecursive_cpp(arma::field<arma::mat> outputF, bool gobool, arma::mat x_mat);
RcppExport SEXP _ROBART2_getPredictionsForTreeRecursive_cpp(SEXP outputFSEXP, SEXP goboolSEXP, SEXP x_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type outputF(outputFSEXP);
    Rcpp::traits::input_parameter< bool >::type gobool(goboolSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_mat(x_matSEXP);
    rcpp_result_gen = Rcpp::wrap(getPredictionsForTreeRecursive_cpp(outputF, gobool, x_mat));
    return rcpp_result_gen;
END_RCPP
}
// getPredictionsRangesForTree3_cpp
arma::mat getPredictionsRangesForTree3_cpp(arma::mat tree_mat, arma::mat x_mat);
RcppExport SEXP _ROBART2_getPredictionsRangesForTree3_cpp(SEXP tree_matSEXP, SEXP x_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tree_mat(tree_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_mat(x_matSEXP);
    rcpp_result_gen = Rcpp::wrap(getPredictionsRangesForTree3_cpp(tree_mat, x_mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ROBART2_rebuildTreeRecurse_cpp", (DL_FUNC) &_ROBART2_rebuildTreeRecurse_cpp, 5},
    {"_ROBART2_rebuildTree2_cpp", (DL_FUNC) &_ROBART2_rebuildTree2_cpp, 1},
    {"_ROBART2_getPredictionsForTreeRecursive_cpp", (DL_FUNC) &_ROBART2_getPredictionsForTreeRecursive_cpp, 3},
    {"_ROBART2_getPredictionsRangesForTree3_cpp", (DL_FUNC) &_ROBART2_getPredictionsRangesForTree3_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ROBART2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
